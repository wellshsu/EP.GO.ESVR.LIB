//-- Auto generated by gopb --//
//--       DO NOT EDIT      --//
package rpb

import (
	"reflect"
	"strconv"
)

var RID _RID
var RIDIS map[int]string = make(map[int]string)
var RIDSI map[string]int = make(map[string]int)

func init() {
	enums := make([][]interface{}, 0)
	enums = append(enums, []interface{}{
		reflect.TypeOf(RID),
		reflect.ValueOf(&RID).Elem(),
		RIDIS,
		RIDSI,
	})
	for _, enum := range enums {
		ttpe := enum[0].(reflect.Type)
		vtpe := enum[1].(reflect.Value)
		len := ttpe.NumField()
		for i := 0; i < len; i++ {
			tfld := ttpe.Field(i)
			vfld := vtpe.Field(i)
			sid := tfld.Tag.Get("id")
			id, _ := strconv.Atoi(sid)
			vfld.SetInt(int64(id))
			name := tfld.Tag.Get("name")
			enum[2].(map[int]string)[id] = name
			enum[3].(map[string]int)[name] = id
		}
	}
}

type RIDEnum int

type _RID struct {
	RPC_GET_ONLINE_FROM_CONN RIDEnum `id:"0" name:"RPC_GET_ONLINE_FROM_CONN" go:"0" rw:"1"` // 从负载服务器中获取在线玩家
	RPC_CONN_NOTIFY_OFFLINE  RIDEnum `id:"1" name:"RPC_CONN_NOTIFY_OFFLINE" go:"0" rw:"1"`  // 负载服务器RPC通知玩家离线
}
